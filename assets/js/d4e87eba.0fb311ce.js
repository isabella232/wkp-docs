(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{195:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return p}));var a=t(3),r=t(7),i=(t(0),t(217)),o={title:"CAPI Templates"},c={unversionedId:"mccp/templates",id:"mccp/templates",isDocsHomePage:!1,title:"CAPI Templates",description:"How to: Add a CAPI Template",source:"@site/docs/mccp/templates.md",slug:"/mccp/templates",permalink:"/docs/next/mccp/templates",editUrl:"https://github.com/weaveworks/wkp-docs/tree/main/docs/mccp/templates.md",version:"current",sidebar:"mccp",previous:{title:"Cluster API Providers",permalink:"/docs/next/mccp/cluster-api-providers"},next:{title:"CAPI Provider Identities",permalink:"/docs/next/mccp/provider-identities"}},s=[{value:"How to: Add a CAPI Template",id:"how-to-add-a-capi-template",children:[{value:"Resource templates - <code>spec.resourcetemplates</code>",id:"resource-templates---specresourcetemplates",children:[]},{value:"Parameter metadata - <code>spec.params</code>",id:"parameter-metadata---specparams",children:[]},{value:"Loading the template into the cluster",id:"loading-the-template-into-the-cluster",children:[]}]},{value:"Full CAPD docker template example",id:"full-capd-docker-template-example",children:[]}],l={toc:s};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"how-to-add-a-capi-template"},"How to: Add a CAPI Template"),Object(i.b)("p",null,"CAPI Templates objects need to be wrapped with the ",Object(i.b)("inlineCode",{parentName:"p"},"CAPITemplate")," custom resource and then loaded into the management cluster."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: capi.weave.works/v1alpha1\nkind: CAPITemplate\nmetadata:\n  name: cluster-template-development\nspec:\n  description: This is the std. CAPD template\n  params:\n    - name: CLUSTER_NAME\n      description: This is used for the cluster naming.\n  resourcetemplates:\n    # Template objects go here\n    - apiVersion: cluster.x-k8s.io/v1alpha3\n      kind: Cluster\n      metadata:\n        name: '${CLUSTER_NAME}'\n")),Object(i.b)("h3",{id:"resource-templates---specresourcetemplates"},"Resource templates - ",Object(i.b)("inlineCode",{parentName:"h3"},"spec.resourcetemplates")),Object(i.b)("p",null,"Add the list of objects to be rendered out to the ",Object(i.b)("inlineCode",{parentName:"p"},"spec.resourcetemplates")," section."),Object(i.b)("h3",{id:"parameter-metadata---specparams"},"Parameter metadata - ",Object(i.b)("inlineCode",{parentName:"h3"},"spec.params")),Object(i.b)("p",null,"You can provide additional metadata about the parameters to the templates in the ",Object(i.b)("inlineCode",{parentName:"p"},"spec.params")," section."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"name"),": The variable name within the resource templates"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"descripton"),": Description of the parameter. This will be rendered in the UI and CLI"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"options"),": The list of possible values this parameter can be set to.")),Object(i.b)("h3",{id:"loading-the-template-into-the-cluster"},"Loading the template into the cluster"),Object(i.b)("p",null,"Load templates into the cluster by adding them to your flux managed git repository or by apply directly with\n",Object(i.b)("inlineCode",{parentName:"p"},"kubectl apply -f capi-template.yaml")),Object(i.b)("p",null,"The MCCP will search for templates in the ",Object(i.b)("inlineCode",{parentName:"p"},"default")," namespace. This can be changed by configuring the ",Object(i.b)("inlineCode",{parentName:"p"},"config.capi.namespace")," value in the helm chart."),Object(i.b)("h2",{id:"full-capd-docker-template-example"},"Full CAPD docker template example"),Object(i.b)("p",null,"This example works with the CAPD provider, see ",Object(i.b)("a",{parentName:"p",href:"/docs/next/mccp/cluster-api-providers"},"Cluster API Providers"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: capi.weave.works/v1alpha1\nkind: CAPITemplate\nmetadata:\n  name: cluster-template-development\nspec:\n  description: This is the std. CAPD template\n  params:\n    - name: CLUSTER_NAME\n      description: This is used for the cluster naming.\n    - name: NAMESPACE\n      description: Namespace to create the cluster in.\n    - name: KUBERNETES_VERSION\n      description: The version of Kubernetes to use.\n      options: ['1.19.7', '1.19.8']\n  resourcetemplates:\n    - apiVersion: cluster.x-k8s.io/v1alpha3\n      kind: Cluster\n      metadata:\n        name: '${CLUSTER_NAME}'\n        namespace: '${NAMESPACE}'\n      spec:\n        clusterNetwork:\n          pods:\n            cidrBlocks:\n              - 192.168.0.0/16\n          serviceDomain: cluster.local\n          services:\n            cidrBlocks:\n              - 10.128.0.0/12\n        infrastructureRef:\n          apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3\n          kind: DockerCluster\n          name: '${CLUSTER_NAME}'\n          namespace: '${NAMESPACE}'\n        controlPlaneRef:\n          kind: KubeadmControlPlane\n          apiVersion: controlplane.cluster.x-k8s.io/v1alpha3\n          name: '${CLUSTER_NAME}-control-plane'\n          namespace: '${NAMESPACE}'\n    - apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3\n      kind: DockerCluster\n      metadata:\n        name: '${CLUSTER_NAME}'\n        namespace: '${NAMESPACE}'\n    - apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3\n      kind: DockerMachineTemplate\n      metadata:\n        name: '${CLUSTER_NAME}-control-plane'\n        namespace: '${NAMESPACE}'\n      spec:\n        template:\n          spec:\n            extraMounts:\n              - containerPath: '/var/run/docker.sock'\n                hostPath: '/var/run/docker.sock'\n    - kind: KubeadmControlPlane\n      apiVersion: controlplane.cluster.x-k8s.io/v1alpha3\n      metadata:\n        name: '${CLUSTER_NAME}-control-plane'\n        namespace: '${NAMESPACE}'\n      spec:\n        replicas: 1\n        infrastructureTemplate:\n          kind: DockerMachineTemplate\n          apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3\n          name: '${CLUSTER_NAME}-control-plane'\n          namespace: '${NAMESPACE}'\n        kubeadmConfigSpec:\n          clusterConfiguration:\n            controllerManager:\n              extraArgs: { enable-hostpath-provisioner: 'true' }\n            apiServer:\n              certSANs: [localhost, 127.0.0.1]\n          initConfiguration:\n            nodeRegistration:\n              criSocket: /var/run/containerd/containerd.sock\n              kubeletExtraArgs:\n                eviction-hard: 'nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%'\n          joinConfiguration:\n            nodeRegistration:\n              criSocket: /var/run/containerd/containerd.sock\n              kubeletExtraArgs:\n                eviction-hard: 'nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%'\n        version: '${KUBERNETES_VERSION}'\n    - apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3\n      kind: DockerMachineTemplate\n      metadata:\n        name: '${CLUSTER_NAME}-md-0'\n        namespace: '${NAMESPACE}'\n      spec:\n        template:\n          spec: {}\n    - apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3\n      kind: KubeadmConfigTemplate\n      metadata:\n        name: '${CLUSTER_NAME}-md-0'\n        namespace: '${NAMESPACE}'\n      spec:\n        template:\n          spec:\n            joinConfiguration:\n              nodeRegistration:\n                kubeletExtraArgs:\n                  eviction-hard: 'nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%'\n    - apiVersion: cluster.x-k8s.io/v1alpha3\n      kind: MachineDeployment\n      metadata:\n        name: '${CLUSTER_NAME}-md-0'\n        namespace: '${NAMESPACE}'\n      spec:\n        clusterName: '${CLUSTER_NAME}'\n        replicas: 1\n        selector:\n          matchLabels:\n        template:\n          spec:\n            clusterName: '${CLUSTER_NAME}'\n            version: '${KUBERNETES_VERSION}'\n            bootstrap:\n              configRef:\n                name: '${CLUSTER_NAME}-md-0'\n                namespace: '${NAMESPACE}'\n                apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3\n                kind: KubeadmConfigTemplate\n            infrastructureRef:\n              name: '${CLUSTER_NAME}-md-0'\n              namespace: '${NAMESPACE}'\n              apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3\n              kind: DockerMachineTemplate\n")))}p.isMDXComponent=!0},217:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return b}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),p=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=p(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=p(t),u=a,b=m["".concat(o,".").concat(u)]||m[u]||d[u]||i;return t?r.a.createElement(b,c(c({ref:n},l),{},{components:t})):r.a.createElement(b,c({ref:n},l))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=t[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);